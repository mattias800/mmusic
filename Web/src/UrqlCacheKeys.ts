import { KeyGenerator } from "@urql/exchange-graphcache";
import { TypesWithNoId } from "@/gql/types-with-no-id.ts";

export const cacheKeys: Record<TypesWithNoId, KeyGenerator> = {
  ArtistImages: () => null,
  ArtistServerStatusImportingArtist: () => null,
  ArtistServerStatusImportingArtistReleases: () => null,
  ArtistServerStatusNotInLibrary: () => null,
  ArtistServerStatusReady: () => null,
  ArtistServerStatusUpdatingArtist: () => null,
  ArtistServerStatusUpdatingArtistReleases: () => null,
  ArtistTopTrack: () => null,
  CacheStatistics: () => null,
  FileSystemSearchRoot: () => null,
  ImportPlaylistSearchRoot: () => null,
  ImportedRelease: () => null,
  LastFmStatistics: () => null,
  LastFmTag: () => null,
  LibraryCacheTrackStatus: () => null,
  LibraryReleaseDownloadStatusUpdate: () => null,
  MbAlbumImages: () => null,
  MbArtistImages: () => null,
  MbLabelInfo: () => null,
  MbMedium: () => null,
  MbNameCredit: () => null,
  MbRelation: () => null,
  MusicBrainzArtistSearchRoot: () => null,
  MusicBrainzRecordingSearchRoot: () => null,
  MusicBrainzReleaseGroupSearchRoot: () => null,
  MusicBrainzReleaseSearchRoot: () => null,
  MusicBrainzSearchRoot: () => null,
  PageInfo: () => null,
  PlaylistSearchRoot: () => null,
  RecommendationsSearchRoot: () => null,
  ServerLibrarySearchRoot: () => null,
  SpotifyPlaylistSearchRoot: () => null,
  TrackCredit: () => null,
  TrackStatistics: () => null,
  UserSearchRoot: () => null,
  UsersConnection: () => null,
  UsersEdge: () => null,
};
