// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicGQL.Db;

#nullable disable

namespace MusicGQL.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20250502220725_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("MusicGQL.Db.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasDiscriminator().HasValue("Event");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MusicGQL.Db.Models.Projections.EventCheckpoint", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastProcessedEventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EventCheckpoints");
                });

            modelBuilder.Entity("MusicGQL.Db.Models.Projections.LikedSongsProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LikedSongReleaseIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LikedSongsProjections");
                });

            modelBuilder.Entity("MusicGQL.Db.Models.Events.LikedSong", b =>
                {
                    b.HasBaseType("MusicGQL.Db.Models.Event");

                    b.Property<string>("ReleaseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("LikedSong");
                });

            modelBuilder.Entity("MusicGQL.Db.Models.Events.UnlikedSong", b =>
                {
                    b.HasBaseType("MusicGQL.Db.Models.Event");

                    b.Property<string>("ReleaseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Events", t =>
                        {
                            t.Property("ReleaseId")
                                .HasColumnName("UnlikedSong_ReleaseId");
                        });

                    b.HasDiscriminator().HasValue("UnlikedSong");
                });
#pragma warning restore 612, 618
        }
    }
}
